1. Встановлення elasticsearch для всіх нод: https://portforwarded.com/install-elastic-elk-stack-8-x-on-ubuntu-22-04-lts/
2. Налаштування elasticsearch.yml:
Приклад для 2 нод:
конфігурація першої ноди:
cluster.name: my-cluster  # Назва кластеру (має бути однаковою для всіх нод)
node.name: node-1         # Унікальна назва першої ноди
network.host: 0.0.0.0     # Адреса, на якій буде працювати Elasticsearch
discovery.seed_hosts: ["IP_адреса_першої_ноди"]  # Вкажіть IP першої ноди
cluster.initial_master_nodes: ["node-1"]

другої:
cluster.name: my-cluster  # Назва кластеру (має бути такою ж, як на першій ноді)
node.name: node-2         # Унікальна назва другої ноди
network.host: 0.0.0.0     # Адреса, на якій буде працювати Elasticsearch
discovery.seed_hosts: ["IP_адреса_першої_ноди"]  # Вкажіть IP першої ноди

node.roles - ролі ноди яку вона буде виконувати:
СПИСОК РОЛІВ:
master:

    Нода, яка може бути обрана як мастер-нода.

    Мастер-нода відповідає за керування кластером: створення/видалення індексів, відстеження стану нод, управління розподілом шардів (shards).

    Для стабільності кластера рекомендується мати принаймні 3 мастер-ноди.

data:

    Нода, яка зберігає дані (індекси та шарди) та виконує операції з даними (пошук, агрегація тощо).

    Data-ноди обробляють основне навантаження, пов'язане зі зберіганням і обробкою даних.

ingest:

    Нода, яка може обробляти документи перед індексацією за допомогою ingest pipeline.

    Ingest-ноди використовуються для трансформації, збагачення або фільтрації даних перед їх збереженням.

ml (Machine Learning):

    Нода, яка може виконувати машинне навчання (Machine Learning) у Elasticsearch.

    Ця роль потрібна, якщо ви використовуєте ML-функції.

remote_cluster_client:

    Нода, яка може підключатися до віддалених кластерів для міжкластерного пошуку (cross-cluster search) або реплікації.

transform:

    Нода, яка може виконувати трансформації даних (наприклад, створення зведених індексів).

coordinating_only:

    Нода, яка виконує роль координатора. Вона не зберігає дані і не є мастер-нодою, але маршрутизує запити клієнтів до інших нод і агрегує результати.

    Якщо нода не має жодної ролі, вона за замовчуванням стає coordinating-only нодою.  



discovery.seed_hosts - Цей параметр визначає, як ноди знаходять одна одну для формування кластера


3. Перезавантажуємо ноди для обновлення кофігурації

4.Перевіряємо чи працюють ноди разом:  curl -X GET "localhost:9200/_cat/nodes?v"

5.Додаткові поради:
PUT /_settings
{
  "index.number_of_replicas": 1
}
Це налаштовує реплікацію так що кожеш шард буде мати  реплікацію на іншій ноді
